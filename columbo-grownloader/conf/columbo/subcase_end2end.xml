<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                           http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
                           http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd">
    <!--

        SUBCASE_END2END.

    -->
    <!--
        State helper.
    -->
    <bean id="subcaseEnd2EndStateHelper" class="eu.artofcoding.grownloader.StateHelper">
        <property name="tableName" value="subcase_end2end"/>
        <property name="dataSource" ref="systemDataSource"/>
    </bean>
    <!--
        Reader
    -->
    <bean id="subcaseEnd2EndItemReader" class="org.springframework.batch.item.database.JdbcCursorItemReader">
        <property name="dataSource" ref="columboSourceDataSource"/>
        <property name="sql"
                  value="SELECT subcase_id, accountability_id, condition_code_value, cr_date_gmt, cr_login_name, cr_work_group, ow_work_group, ow_response_center, cl_login_name, date_modified, delivery_alternative FROM subcase_end2end WHERE date_modified BETWEEN ? AND ?"/>
        <property name="preparedStatementSetter">
            <bean id="table2DateModifiedStatementSetter"
                  class="eu.artofcoding.grownloader.columbo.PairedDateStatementSetter">
                <property name="stateHelper" ref="subcaseEnd2EndStateHelper"/>
            </bean>
        </property>
        <property name="rowMapper">
            <bean id="subcaseEnd2EndItemReaderRowMapper"
                  class="eu.artofcoding.grownloader.columbo.entity.SubcaseEnd2EndRowMapper"/>
        </property>
        <property name="fetchSize" value="10000"/>
    </bean>
    <!--
        Writer
    -->
    <bean id="subcaseEnd2EndItemWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="columboDestinationDataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql"
                  value="INSERT INTO stage1.subcase_end2end (subcase_id, accountability_id, condition_code_value, cr_date_gmt, cr_login_name, cr_work_group, ow_work_group, ow_response_center, cl_login_name, date_modified, delivery_alternative) VALUES (:subcaseId, :accountabilityId, :conditionCodeValue, :crDateGmt, :crLoginName, :crWorkGroup, :owWorkGroup, :owResponseCenter, :clLoginName, :dateModified, :deliveryAlternative)"/>
    </bean>
    <!--
        Job
    -->
    <batch:job id="subcaseEnd2EndJob" incrementer="dynamicJobParameters" restartable="true">
        <batch:listeners>
            <batch:listener ref="systemErrorExecutionLister"/>
        </batch:listeners>
        <!-- Create destination table -->
        <batch:step id="subcaseEnd2EndCreateDestinationTableStep" next="subcaseEnd2EndReadAndWriteStep">
            <batch:tasklet>
                <bean id="subcaseEnd2EndTableCreator" class="eu.artofcoding.grownloader.columbo.TableCreator">
                    <property name="schemaName" value="stage1"/>
                    <property name="tableName" value="subcase_end2end"/>
                    <property name="procedureName" value="stage1.p_create_subcase_end2end"/>
                    <property name="dataSource" ref="columboDestinationDataSource"/>
                </bean>
            </batch:tasklet>
        </batch:step>
        <!-- Read data from source table and write to destination table (stage1) -->
        <batch:step id="subcaseEnd2EndReadAndWriteStep" next="subcaseEnd2EndMergeDataStep">
            <batch:tasklet>
                <batch:chunk reader="subcaseEnd2EndItemReader"
                             writer="subcaseEnd2EndItemWriter"
                             commit-interval="10000"/>
            </batch:tasklet>
        </batch:step>
        <!-- Merge data from stage1 into stage2 -->
        <batch:step id="subcaseEnd2EndMergeDataStep" next="subcaseEnd2EndRecordStateStep">
            <batch:tasklet>
                <bean id="subcaseEnd2EndMergeIntoStage2" class="eu.artofcoding.grownloader.columbo.Stage2Merger">
                    <property name="tableName" value="subcase_end2end"/>
                    <property name="procedureName" value="stage2.p_merge_all"/>
                    <property name="dataSource" ref="columboDestinationDataSource"/>
                </bean>
            </batch:tasklet>
        </batch:step>
        <!-- Record successful download -->
        <batch:step id="subcaseEnd2EndRecordStateStep">
            <batch:tasklet>
                <bean id="subcaseEnd2EndRecordState" class="eu.artofcoding.grownloader.DownloadStateRecorder">
                    <property name="stateHelper" ref="subcaseEnd2EndStateHelper"/>
                </bean>
            </batch:tasklet>
        </batch:step>
    </batch:job>
    <!--
        Scheduler
    -->
    <bean id="subcaseEnd2EndSchedulingLauncher" class="eu.artofcoding.grownloader.SpringSchedulingLauncher">
        <property name="job" ref="subcaseEnd2EndJob"/>
        <property name="jobLauncher" ref="jobLauncher"/>
    </bean>
    <task:scheduled-tasks>
        <!-- Start job 'fixed-delay' seconds after completion of previous job. -->
        <task:scheduled ref="subcaseEnd2EndSchedulingLauncher" method="launch" fixed-delay="10000"/>
    </task:scheduled-tasks>
</beans>
