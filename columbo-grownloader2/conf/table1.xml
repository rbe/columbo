<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                           http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
                           http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd">
    <!-- Import base configurations -->
    <import resource="classpath:META-INF/spring-context.xml"/>
    <import resource="datasources.xml"/>
    <!--
        Table1.
    -->
    <bean id="table1StateHelper" class="eu.artofcoding.grownloader2.StateHelper">
        <property name="tableName" value="table1"/>
        <property name="dataSource" ref="destinationDataSource"/>
    </bean>
    <!--
        Reader
    -->
    <bean id="table1ItemReaderRowMapper" class="eu.artofcoding.grownloader2.test.Table1RowMapper"/>
    <bean id="dateModifiedStatementSetter" class="eu.artofcoding.grownloader2.cdd.DateModifiedStatementSetter">
        <property name="stateHelper" ref="table1StateHelper"/>
    </bean>
    <bean id="table1ItemReader" class="org.springframework.batch.item.database.JdbcCursorItemReader">
        <property name="dataSource" ref="sourceDataSource"/>
        <property name="sql"
                  value="SELECT id, customer, bla, blub FROM table1 WHERE bla BETWEEN ? AND ?"/>
        <property name="preparedStatementSetter" ref="dateModifiedStatementSetter"/>
        <property name="rowMapper" ref="table1ItemReaderRowMapper"/>
        <property name="fetchSize" value="1000"/>
    </bean>
    <!--
        Writer
    -->
    <bean id="table1ItemWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="destinationDataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean id="table1SqlParameterProvider"
                  class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql"
                  value="INSERT INTO table1 (id, customer, bla, blub) VALUES (:id, :customer, :bla, :blub)"/>
    </bean>
    <!--
        Job
    -->
    <bean id="table1ErroredStepExecutionLister" class="eu.artofcoding.grownloader2.ErroredExecutionListener"/>
    <batch:job id="table1Job" incrementer="dynamicJobParameters" restartable="true">
        <batch:listeners>
            <batch:listener ref="table1ErroredStepExecutionLister"/>
        </batch:listeners>
        <!-- Create destination table -->
        <batch:step id="table1CreateDestinationTableStep" next="table1ReadAndWriteStep">
            <batch:tasklet>
                <bean id="tableCreator" class="eu.artofcoding.grownloader2.test.Table1Creator">
                    <property name="dataSource" ref="destinationDataSource"/>
                </bean>
            </batch:tasklet>
        </batch:step>
        <!-- Read data from source table and write to destination table -->
        <batch:step id="table1ReadAndWriteStep" next="recordTable1StateStep">
            <batch:tasklet>
                <batch:chunk reader="table1ItemReader"
                             writer="table1ItemWriter"
                             commit-interval="1000"/>
            </batch:tasklet>
        </batch:step>
        <!-- Record successful download into stage1 -->
        <batch:step id="recordTable1StateStep" next="table1MergeDataStep">
            <batch:tasklet>
                <bean id="recordTable1State" class="eu.artofcoding.grownloader2.DownloadStateRecorder">
                    <property name="stateHelper" ref="table1StateHelper"/>
                </bean>
            </batch:tasklet>
        </batch:step>
        <!-- Merge data -->
        <batch:step id="table1MergeDataStep">
            <batch:tasklet>
                <bean id="table1MergeIntoStage2" class="eu.artofcoding.grownloader2.cdd.Stage2Merger">
                    <property name="tableName" value="table1"/>
                    <property name="dataSource" ref="destinationDataSource"/>
                </bean>
            </batch:tasklet>
        </batch:step>
    </batch:job>
    <!--
        Scheduler
    -->
    <bean id="table1SchedulingLauncher" class="eu.artofcoding.grownloader2.SpringSchedulingLauncher">
        <property name="job" ref="table1Job"/>
        <property name="jobLauncher" ref="jobLauncher"/>
    </bean>
    <task:scheduled-tasks>
        <task:scheduled ref="table1SchedulingLauncher" method="launch" fixed-delay="10000"/>
    </task:scheduled-tasks>
</beans>
